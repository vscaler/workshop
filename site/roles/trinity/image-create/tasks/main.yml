---
- name: Get image path
  set_fact:
    image_path: "{{ trix_images }}/{{ image_name }}"

- name: Create dir for compute image
  file:
    name: "{{ image_path }}"
    state: directory

- name: Install yum-utils
  yum:
    name: yum-utils
    state: present

- name: Check OS release on controller
  command: rpm -qf /etc/os-release --qf '%{NAME}'
  register: os_release_rpm
  changed_when: False

- name: Copy local yum.conf
  copy:
    src: "/etc/yum.conf"
    dest: "{{ image_path }}/etc/"

- name: Copy local yum variables
  copy:
    src: "/etc/yum/vars"
    dest: "{{ image_path }}/etc/yum/"

##
## The new releasever option in the yum module actually doesn't do anything...
## Workaround until it's fixed.
##

- name: Add releasever variable
  copy:
    content: "{{ ansible_distribution_major_version }}\n"
    dest: "{{ image_path }}/etc/yum/vars/releasever"

- name: Install {{ os_release_rpm.stdout }} package in {{ image_path }}
  yum:
    name: "{{ os_release_rpm.stdout }}"
    #releasever: "{{ ansible_distribution_major_version }}"
    installroot: "{{ image_path }}"
    state: present

- name: Create {{ image_path }}/dev
  file:
    path: "{{ image_path }}/dev/"
    state: directory
    mode: 0755
    owner: root
    group: root

- name: Create basic /dev files
  command: "/usr/bin/mknod {{ image_path }}/dev/{{ item.dev }} {{ item.t }} {{ item.ma }} {{ item.mi }} creates={{ image_path }}/dev/{{ item.dev }}"
  args:
    creates: "{{ image_path }}/dev/{{ item.dev }}"
  with_items:
    - { dev: "null",    mo: "666", t: 'c', ma: 1, mi: 3 } # device, mode, type, major, minor
    - { dev: "zero",    mo: "666", t: 'c', ma: 1, mi: 5 }
    - { dev: "random",  mo: "666", t: 'c', ma: 1, mi: 8 }
    - { dev: "urandom", mo: "666", t: 'c', ma: 1, mi: 9 }
    - { dev: "console", mo: "600", t: 'c', ma: 5, mi: 1 }
    - { dev: "ptmx",    mo: "666", t: 'c', ma: 5, mi: 2 }
    - { dev: "tty",     mo: "666", t: 'c', ma: 5, mi: 0 }

- name: Add luna repo
  get_url:
    url: '{{ trix_local_repo_baseurl + "/luna-1.2.repo" if local_install else luna_repo }}'
    dest: "{{ image_path }}/etc/yum.repos.d/luna-1.2.repo"

- block:

  - name: Set up local repository
    yum_repository:
      name: "{{ trix_local_reponame }}"
      baseurl: "{{ trix_local_repo_baseurl }}"
      description: "{{ trix_local_reponame }}"
      gpgcheck: no
      enabled: yes
      reposdir: "{{ image_path }}/etc/yum.repos.d"

  - name: Disable all repo without '*-local' suffix
    shell: >
      yum-config-manager --installroot={{ image_path }} \
      | sed -n 's/^\[\(.*\)\]$/\1/p' \
      | egrep -v "\-local$" \
      | xargs yum-config-manager --installroot={{ image_path }} --disable {}
    args:
      warn: no

  when: local_install | default(False)

- name: Install epel manually
  yum:
    name: epel-release
    installroot: "{{ image_path }}"
    state: present

- name: Disable epel repo for local installation
  shell: >
    yum-config-manager --installroot={{ image_path }} --disable epel
  args:
    warn: no
  when: local_install | default(False)

- name: Install core packages - @core, kernel and grub2
  yum:
    name: "{{ image_core_packages }}"
    state: present
    installroot: "{{ image_path }}"

#- name: Copy gpg keys
#  copy:
#    src: "/etc/pki/rpm-gpg"
#    dest: "{{ image_path }}/etc/pki/"

- name: Make .ssh root directory
  file:
    path: "{{ image_path }}/root/.ssh"
    mode: 0700
    owner: root
    group: root
    state: directory

- name: Ensure /etc{{trix_root}}/passwords/images/{{ image_name }} exists
  file:
    path: '/etc{{trix_root}}/passwords/images/{{ image_name }}'
    state: directory

- name: Store root password if defined
  template:
    src: root.txt
    dest: '/etc{{trix_root}}/passwords/images/{{ image_name }}/root.txt'
  when: image_passwd|default([])

- name: Generate SSH keys
  user:
    name: root
    generate_ssh_key: yes
    ssh_key_file: "{{ image_path }}/root/.ssh/id_rsa"

- name: Add controller's key to authorized keys
  authorized_key:
    user: root
    state: present
    key: '{{ lookup("file", "/root/.ssh/id_rsa.pub") }}'
    path: "{{ image_path }}/root/.ssh/authorized_keys"

- name: Add the image to luna
  luna_osimage:
    name: "{{ image_name }}"
    path: "{{ image_path }}"

- name: Refresh the list of hosts in the inventory
  meta: refresh_inventory
